[gd_scene load_steps=12 format=1]

[ext_resource path="res://background2.png" type="Texture" id=1]
[ext_resource path="res://aPlayer.tscn" type="PackedScene" id=2]
[ext_resource path="res://player1.png" type="Texture" id=3]
[ext_resource path="res://player2.png" type="Texture" id=4]
[ext_resource path="res://player3.png" type="Texture" id=5]
[ext_resource path="res://white.png" type="Texture" id=6]

[sub_resource type="GDScript" id=1]

script/source = "extends Node2D


var balls = []
var scores = []
var speeds = []


func _ready():
	# Init balls, scores and speeds arrays
	var count = 1
	while true:
		var ball = get_node(\"ball\" + str(count))
		
		if ball == null:
			break
		
		balls.append(ball)
		scores.append(0)
		speeds.append(0)
		
		count += 1
	
	set_process(true)

func _process(delta):
	var count = 1
	while count <= balls.size():
		var ball = balls[count - 1]
		var speed = ball.get_linear_velocity().length()
		
		scores[count - 1] += speed * delta
		speeds[count - 1] = speed
		
		count += 1

func get_scores():
	\"\"\" Returns an array of scores \"\"\"
	return scores

func get_speeds():
	\"\"\" Returns an array of speeds \"\"\"
	return speeds
"

[sub_resource type="CanvasItemShader" id=4]

_code = {
"fragment": "float white = (sin(TIME) + 1) / 2;
",
"fragment_ofs": 0,
"light": "",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

[sub_resource type="CanvasItemMaterial" id=5]

shader/shader = SubResource( 4 )
shader/shading_mode = 0

[sub_resource type="CanvasItemShader" id=2]

_code = {
"fragment": "/* Chromatic abberation shader; Doesn't support transparency */
uniform vec2 rOffset;
uniform vec2 gOffset;
uniform vec2 bOffset;

float red = texscreen(SCREEN_UV + rOffset).r;
float green = texscreen(SCREEN_UV + gOffset).g;
float blue = texscreen(SCREEN_UV + bOffset).b;

COLOR = color(red, green, blue, 1.0);",
"fragment_ofs": 0,
"light": "",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

[sub_resource type="CanvasItemMaterial" id=3]

shader/shader = SubResource( 2 )
shader/shading_mode = 0
shader_param/rOffset = Vector2( 0.002, 0 )
shader_param/gOffset = Vector2( 0, 0 )
shader_param/bOffset = Vector2( -0.002, 0 )

[node name="canvas" type="Node2D"]

script/script = SubResource( 1 )

[node name="background" type="Sprite" parent="."]

material/material = SubResource( 5 )
transform/pos = Vector2( 720, 450 )
texture = ExtResource( 1 )

[node name="ball1" parent="." instance=ExtResource( 2 )]

transform/pos = Vector2( 360, 450 )
texture = ExtResource( 3 )

[node name="ball2" parent="." instance=ExtResource( 2 )]

transform/pos = Vector2( 720, 450 )
player = 2
texture = ExtResource( 4 )

[node name="ball3" parent="." instance=ExtResource( 2 )]

transform/pos = Vector2( 1080, 450 )
player = 3
texture = ExtResource( 5 )

[node name="shader" type="Sprite" parent="."]

material/material = SubResource( 3 )
transform/pos = Vector2( 720, 450 )
transform/scale = Vector2( 27, 18 )
texture = ExtResource( 6 )


